" Some default comments are deleted.
" If you want to check comments, see: https://github.com/vifm/vifm/blob/master/data/vifmrc"

set syscalls

set trash

set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,
            \phistory,fhistory,dirstack,registers,bookmarks,bmarks


set history=100

set nofollowlinks

set sortnumbers

set undolevels=100

set vimhelp

set norunexec

set timefmt='%Y/%m/%d %H:%M:%S'

set wildmenu

set wildstyle=popup

set suggestoptions=normal,visual,view,otherpane,keys,marks,registers

set ignorecase
set smartcase

set nohlsearch

set incsearch

set scrolloff=4

set slowfs=curlftpfs

set statusline="  %t  %= %A %10u:%-7g %15s %20d %N %T %= [%a free]"
colorscheme tran


mark b ~/bin/
mark h ~/

command! df df -h %m 2> /dev/null
command! diff vim -d %f %F
command! zip zip -r %c.zip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! reload :write | restart full


" Pdf
" filetype {*.pdf},<application/pdf>
"        \ {Open in zathura}
"        \ nohup zathura >/dev/null 2>&1 &
"        \ {Open in Preview}
"        \ open -a Preview.app,
"        \ {Open in Skim}
"        \ open -a Skim.app,
" fileviewer {*.pdf},<application/pdf> pdftotext -nopgbrk %c -

filetype *.pdf nohup zathura > /dev/null 2>&1 &

" PostScript
filetype {*.ps,*.eps,*.ps.gz},<application/postscript> open -a Preview.app

" Djvu
filetype {*.djvu},<image/vnd.djvu> open -a MacDjView.app

" Audio
filetype {*.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus,
         \*.aac,*.mpga},
        \<audio/*>
       \ {Open in QuickTime Player}
       \ open -a QuickTime\ Player.app,
fileviewer {*.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus,
           \*.aac,*.mpga},
          \<audio/*>
         \ ffprobe -hide_banner -pretty %c 2>&1

" Video
filetype {*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
         \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
         \*.as[fx],*.unknown_video},
        \<video/*>
       \ {Open in QuickTime Player}
       \ open -a QuickTime\ Player.app,
       \ {Open in IINA}
       \ open -a IINA.app,
       \ {Open in VLC}
       \ open -a VLC.app,
fileviewer {*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
           \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
           \*.as[fx],*.unknown_video},
          \<video/*>
         \ ffprobe -hide_banner -pretty %c 2>&1

" Web
filetype {*.xhtml,*.html,*.htm},<text/html>
       \ {Open in vim}
       \ vim,
fileviewer {*.xhtml,*.html,*.htm},<text/html> w3m -dump -T text/html

" Object
filetype {*.o},<application/x-object> nm %f | less

" Man page
filetype {*.[1-8]},<text/troff> man ./%c
fileviewer {*.[1-8]},<text/troff> man ./%c | col -b

" Image
 filetype {*.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm},<image/*>
        \ nohup vimiv > /dev/null 2>&1 &
" fileviewer {*.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm},<image/*>
"          \ identify %f

fileviewer {*.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm} nohup vimiv > /dev/null 2>&1 &


" MD5
filetype *.md5
       \ {Check MD5 hash sum}
       \ md5sum -c %f %S,

" SHA1
filetype *.sha1
       \ {Check SHA1 hash sum}
       \ shasum -c %f %S,

" SHA256
filetype *.sha256
       \ {Check SHA256 hash sum}
       \ shasum -a 256 -c %f %S,

" SHA512
filetype *.sha512
       \ {Check SHA512 hash sum}
       \ shasum -a 512 -c %f %S,

" Torrent
filetype {*.torrent},<application/x-bittorrent> open -a Transmission.app
fileviewer {*.torrent},<application/x-bittorrent>
         \ dumptorrent -v %c,
         \ transmission-show %c

" Extract zip files
filetype {*.zip},<application/zip,application/java-archive>
       \ mkdir %f:r && tar -vxf %f --directory %f:r
fileviewer {*.zip,*.jar,*.war,*.ear},
          \<application/zip,application/java-archive>
          \ tar -tf %f

" Extract tar archives
filetype {*.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz,*.tar.zst,
         \*.tzst},
        \<application/x-tar>
       \ tar -vxf %f
fileviewer {*.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz,*.tar.zst,
           \*.tzst},
          \<application/x-tar>
         \ tar -tf %f

" Extract .bz2 archives
filetype *.bz2 bzip2 -d %f

" Extract .gz files
filetype *.gz gunzip %f

" Extract rar files
filetype *.rar unrar x -y -c- -ad %f %s
fileviewer *.rar unrar lb %c

" Mount .dmg archives
filetype *.dmg open

" Mount disk .img
filetype *.img open

" Open .pkg binaries
filetype *.pkg open

" Office files
filetype *.pptx,*.ppt,*.pptm,*.potx open -a 'Microsoft PowerPoint.app'
filetype *.xlsx,*.xls,*.xlsm open -a 'Microsoft Excel.app'
filetype *.docx,*.doc,*.docm open -a 'Microsoft Word.app'

" Syntax highlighting in preview
"
" Explicitly set highlight type for some extensions
"
" 256-color terminal
" fileviewer *.[ch],*.[ch]pp highlight -O xterm256 -s dante --syntax c %c
" fileviewer Makefile,Makefile.* highlight -O xterm256 -s dante --syntax make %c
"
" 16-color terminal
" fileviewer *.c,*.h highlight -O ansi -s dante %c
"
" Or leave it for automatic detection
" fileviewer *[^/] pygmentize -O style=monokai -f console256 -g

" Displaying pictures in terminal
" fileviewer *.jpg,*.png shellpic %c

" Open all other files with default system programs (you can also remove all
" :file[x]type commands above to ensure they don't interfere with system-wide
" settings).  Use of the line below results in ignoring 'vi[x]cmd' option for
" unknown file types on l/Enter keys.
" filetype * open

" ------------------------------------------------------------------------------
" Panel configuration examples
" ------------------------------------------------------------------------------

" Customize view columns a bit (enable ellipsis for truncated file names)
" set viewcolumns=-{name}..,6{}.
set viewcolumns=-45%{name}..,10{size},12{perms},21{mtime}

" Show vertical border
" set fillchars=vborder:â”‚

" Filter-out build and temporary files
" filter! {*.lo,*.o,*.d,*.class,*.pyc,*.pyo,.*~}



" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

" Open file in new MacVim tab
nnoremap o :!mvim --remote-tab-silent %f<cr>
" Open file in new MacVim window
nnoremap O :!mvim %f<cr>

" Open file in the background using its default program
nnoremap gb :!open -g %f<cr>

" Yank current directory path into the clipboard
nnoremap yd :!printf %d | pbcopy<cr>

" Yank current file path into the clipboard (escape spaces)
nnoremap yf :!printf %f:p:gs? ?\\ ? | pbcopy<cr>

" View preview in Quick Look
" nnoremap <space> :!qlmanage -p %f > /dev/null 2>&1<cr>

" Mappings for faster renaming
nnoremap I cw<c-a>
nnoremap cc cw<c-u>
nnoremap A cw

" As above, but without the file extension
" nnoremap I cW<c-a>
" nnoremap cc cW<c-u>
" nnoremap A cW

" Open editor to edit vifmrc and apply settings after returning to vifm
nnoremap ,c :write | edit $MYVIFMRC | restart full<cr>
" Open MacVim to edit vifmrc
nnoremap ,C :!mvim --remote-tab-silent $MYVIFMRC &<cr>

" Toggle wrap setting on ,w key
nnoremap ,w :set wrap!<cr>

" Example of standard two-panel file managers mappings
" nnoremap <f3> :!less %f<cr>
" nnoremap <f4> :edit<cr>
" nnoremap <f5> :copy<cr>
" nnoremap <f6> :move<cr>
" nnoremap <f7> :mkdir<space>
" nnoremap <f8> :delete<cr>

" Midnight commander alike mappings
" Open current directory in the other pane
nnoremap <a-i> :sync<cr>
" Open directory under cursor in the other pane
nnoremap <a-o> :sync %c<cr>
" Swap panes
" nnoremap <c-u> <c-w>x

" ------------------------------------------------------------------------------
" Various customization examples
" ------------------------------------------------------------------------------

" Use ag (the silver searcher) instead of grep
" set grepprg='ag --line-numbers %i %a %s'

" Add additional place to look for executables
" let $PATH = $HOME.'/bin/fuse:'.$PATH

" Block particular shortcut
" nnoremap <left> <nop>

" Export IPC name of current instance as environment variable and use it to
" communicate with the instance later.
"
" It can be used in some shell script that gets run from inside vifm, for
" example, like this:
"     vifm --server-name "$VIFM_SERVER_NAME" --remote +"cd '$PWD'"
"
" let $VIFM_SERVER_NAME = v:servername

" Activate screen/tmux support
" screen!

" ------------------------------------------------------------------------------
" Icon decorations example
" ------------------------------------------------------------------------------

" https://github.com/cirala/vifm_devicons

"
" custom settings

command create :
\| let $last_char = expand(system("str=\"%a\"; echo \"${str: -1}\""))
\| if $last_char == "/"
\|      mkdir "%a"
\| else
\|      touch "%a"
\| endif

set dotfiles
nnoremap q :quit<cr>
nnoremap Q :cquit<cr>


set vicmd=nvim

set nu
set rnu
set scrolloff=10

nnoremap <space> :!open %f<cr>
nnoremap st :set sort=-mtime<cr>
nnoremap sn :set sort=iname<cr>
nnoremap r :rename<space>
nnoremap cm cp

" create file or directory: if last characters is /, directory will be created
nnoremap a :create<space>
